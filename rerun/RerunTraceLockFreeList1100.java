package test.LockFreeListAddRemove;
import java.io.*;
import java.util.*;
import src.concurrency.*;
import jtrace.ArgType;
import jtrace.ArgInt;
import jtrace.ArgBoolean;
import jtrace.ArgChar;
import jtrace.ArgString;
import jtrace.TraceRecord;

class VTLockFreeListTest{
	private LockFreeList data;
	VTLockFreeListTest(){
		this.data = new LockFreeList();
	}
	public boolean vtMethod0(int x1){return data.add(x1);}
	public boolean vtMethod1(int x1){return data.remove(x1);}
}
public class RerunTraceLockFreeList1100{
	public static void main(String[] argv){
		int tdNum = 2,mdNum = 2;
		VTLockFreeListTest testobj = new VTLockFreeListTest();
		TraceRecord[][] tr = new TraceRecord[tdNum][];
		testobj.vtMethod1(7);
		testobj.vtMethod0(87);
		testobj.vtMethod0(69);
		testobj.vtMethod0(31);
		testobj.vtMethod1(36);
		testobj.vtMethod0(57);
		testobj.vtMethod0(65);
		testobj.vtMethod1(80);
		testobj.vtMethod0(56);
		testobj.vtMethod0(96);
		testobj.vtMethod0(55);
		testobj.vtMethod1(16);
		testobj.vtMethod0(41);
		testobj.vtMethod0(2);
		testobj.vtMethod1(69);
		testobj.vtMethod0(91);
		testobj.vtMethod0(8);
		testobj.vtMethod1(75);
		testobj.vtMethod1(97);
		testobj.vtMethod0(85);
		testobj.vtMethod0(97);
		testobj.vtMethod0(76);
		testobj.vtMethod0(69);
		testobj.vtMethod0(79);
		testobj.vtMethod0(26);
		testobj.vtMethod0(52);
		testobj.vtMethod0(53);
		testobj.vtMethod1(17);
		testobj.vtMethod0(13);
		testobj.vtMethod0(89);
		testobj.vtMethod1(50);
		testobj.vtMethod1(47);
		testobj.vtMethod1(84);
		testobj.vtMethod1(39);
		testobj.vtMethod0(21);
		testobj.vtMethod1(95);
		testobj.vtMethod1(24);
		testobj.vtMethod1(22);
		testobj.vtMethod1(7);
		testobj.vtMethod0(5);
		testobj.vtMethod1(19);
		testobj.vtMethod0(13);
		testobj.vtMethod1(64);
		testobj.vtMethod0(7);
		testobj.vtMethod1(99);
		testobj.vtMethod1(71);
		testobj.vtMethod0(6);
		testobj.vtMethod1(54);
		testobj.vtMethod1(20);
		testobj.vtMethod1(88);
		testobj.vtMethod0(18);
		testobj.vtMethod1(64);
		testobj.vtMethod0(99);
		testobj.vtMethod1(72);
		testobj.vtMethod0(5);
		testobj.vtMethod0(70);
		testobj.vtMethod0(50);
		testobj.vtMethod1(56);
		testobj.vtMethod1(3);
		testobj.vtMethod0(35);
		testobj.vtMethod0(31);
		testobj.vtMethod0(86);
		testobj.vtMethod1(44);
		testobj.vtMethod1(88);
		testobj.vtMethod1(12);
		testobj.vtMethod1(10);
		testobj.vtMethod0(10);
		testobj.vtMethod1(89);
		testobj.vtMethod1(16);
		testobj.vtMethod1(91);
		testobj.vtMethod1(49);
		testobj.vtMethod0(31);
		testobj.vtMethod1(45);
		testobj.vtMethod1(97);
		testobj.vtMethod1(52);
		testobj.vtMethod0(0);
		testobj.vtMethod0(6);
		testobj.vtMethod1(8);
		testobj.vtMethod0(96);
		testobj.vtMethod0(2);
		testobj.vtMethod0(48);
		testobj.vtMethod0(96);
		testobj.vtMethod0(88);
		testobj.vtMethod0(48);
		testobj.vtMethod1(66);
		testobj.vtMethod1(80);
		testobj.vtMethod0(67);
		testobj.vtMethod1(50);
		testobj.vtMethod0(32);
		testobj.vtMethod1(27);
		testobj.vtMethod1(74);
		testobj.vtMethod1(40);
		testobj.vtMethod1(40);
		testobj.vtMethod0(99);
		testobj.vtMethod0(31);
		testobj.vtMethod0(39);
		testobj.vtMethod0(87);
		testobj.vtMethod0(35);
		testobj.vtMethod0(99);
		testobj.vtMethod0(18);
		testobj.vtMethod0(33);
		testobj.vtMethod1(27);
		testobj.vtMethod0(34);
		testobj.vtMethod0(56);
		testobj.vtMethod1(92);
		testobj.vtMethod1(40);
		testobj.vtMethod1(7);
		testobj.vtMethod1(79);
		testobj.vtMethod1(84);
		testobj.vtMethod0(80);
		testobj.vtMethod0(25);
		testobj.vtMethod0(83);
		testobj.vtMethod1(47);
		testobj.vtMethod1(84);
		testobj.vtMethod0(29);
		testobj.vtMethod0(47);
		testobj.vtMethod0(7);
		testobj.vtMethod0(16);
		testobj.vtMethod0(98);
		testobj.vtMethod0(33);
		testobj.vtMethod1(5);
		testobj.vtMethod1(63);
		testobj.vtMethod0(77);
		testobj.vtMethod0(95);
		testobj.vtMethod0(27);
		testobj.vtMethod0(24);
		testobj.vtMethod0(14);
		testobj.vtMethod1(95);
		testobj.vtMethod1(49);
		testobj.vtMethod0(5);
		testobj.vtMethod1(39);
		testobj.vtMethod1(43);
		testobj.vtMethod0(32);
		testobj.vtMethod1(6);
		testobj.vtMethod1(3);
		testobj.vtMethod1(63);
		testobj.vtMethod0(50);
		testobj.vtMethod0(0);
		testobj.vtMethod0(68);
		testobj.vtMethod1(14);
		testobj.vtMethod0(43);
		testobj.vtMethod1(41);
		testobj.vtMethod1(73);
		testobj.vtMethod1(59);
		testobj.vtMethod1(89);
		testobj.vtMethod1(68);
		testobj.vtMethod1(22);
		testobj.vtMethod0(89);
		testobj.vtMethod1(92);
		testobj.vtMethod1(15);
		testobj.vtMethod1(26);
		testobj.vtMethod1(9);
		testobj.vtMethod0(1);
		testobj.vtMethod0(9);
		testobj.vtMethod1(26);
		testobj.vtMethod1(71);
		testobj.vtMethod0(3);
		testobj.vtMethod0(4);
		testobj.vtMethod1(21);
		testobj.vtMethod1(47);
		testobj.vtMethod0(6);
		testobj.vtMethod0(62);
		testobj.vtMethod1(40);
		testobj.vtMethod1(8);
		testobj.vtMethod0(20);
		testobj.vtMethod0(40);
		testobj.vtMethod0(43);
		testobj.vtMethod1(12);
		testobj.vtMethod1(32);
		testobj.vtMethod1(12);
		testobj.vtMethod1(78);
		testobj.vtMethod0(33);
		testobj.vtMethod0(34);
		testobj.vtMethod0(65);
		testobj.vtMethod0(34);
		testobj.vtMethod1(82);
		testobj.vtMethod1(76);
		testobj.vtMethod0(30);
		testobj.vtMethod0(0);
		testobj.vtMethod1(29);
		testobj.vtMethod0(28);
		testobj.vtMethod0(94);
		testobj.vtMethod1(37);
		testobj.vtMethod1(76);
		testobj.vtMethod0(39);
		testobj.vtMethod0(97);
		testobj.vtMethod0(32);
		testobj.vtMethod1(75);
		testobj.vtMethod1(34);
		testobj.vtMethod1(47);
		testobj.vtMethod0(70);
		testobj.vtMethod0(86);
		testobj.vtMethod1(95);
		testobj.vtMethod1(44);
		testobj.vtMethod1(72);
		testobj.vtMethod0(8);
		testobj.vtMethod1(77);
		testobj.vtMethod0(85);
		testobj.vtMethod1(38);
		testobj.vtMethod0(56);
		testobj.vtMethod1(90);
		testobj.vtMethod1(95);
		testobj.vtMethod1(95);
		testobj.vtMethod0(27);
		testobj.vtMethod1(84);
		testobj.vtMethod1(58);
		testobj.vtMethod0(75);
		testobj.vtMethod1(10);
		testobj.vtMethod0(80);
		testobj.vtMethod0(17);
		testobj.vtMethod1(47);
		testobj.vtMethod0(98);
		testobj.vtMethod1(99);
		testobj.vtMethod0(15);
		testobj.vtMethod0(94);
		testobj.vtMethod0(48);
		testobj.vtMethod0(8);
		testobj.vtMethod0(34);
		testobj.vtMethod1(35);
		testobj.vtMethod1(30);
		testobj.vtMethod1(22);
		testobj.vtMethod0(73);
		testobj.vtMethod0(6);
		testobj.vtMethod1(80);
		testobj.vtMethod0(30);
		testobj.vtMethod1(33);
		testobj.vtMethod0(24);
		testobj.vtMethod1(49);
		testobj.vtMethod1(87);
		testobj.vtMethod1(99);
		testobj.vtMethod1(67);
		testobj.vtMethod0(12);
		testobj.vtMethod1(81);
		testobj.vtMethod0(51);
		testobj.vtMethod0(72);
		testobj.vtMethod0(22);
		testobj.vtMethod1(85);
		testobj.vtMethod0(97);
		testobj.vtMethod1(17);
		testobj.vtMethod0(48);
		testobj.vtMethod0(45);
		testobj.vtMethod0(45);
		testobj.vtMethod1(13);
		testobj.vtMethod0(70);
		testobj.vtMethod1(65);
		testobj.vtMethod0(73);
		testobj.vtMethod0(10);
		testobj.vtMethod1(1);
		testobj.vtMethod1(53);
		testobj.vtMethod1(44);
		testobj.vtMethod0(61);
		testobj.vtMethod1(16);
		testobj.vtMethod0(28);
		testobj.vtMethod0(74);
		testobj.vtMethod0(86);
		testobj.vtMethod0(77);
		testobj.vtMethod0(89);
		testobj.vtMethod1(48);
		testobj.vtMethod1(82);
		testobj.vtMethod1(60);
		testobj.vtMethod0(23);
		testobj.vtMethod0(82);
		testobj.vtMethod1(96);
		testobj.vtMethod1(99);
		testobj.vtMethod0(40);
		testobj.vtMethod0(50);
		testobj.vtMethod1(93);
		testobj.vtMethod0(49);
		testobj.vtMethod0(75);
		testobj.vtMethod1(5);
		testobj.vtMethod0(63);
		testobj.vtMethod1(71);
		testobj.vtMethod0(28);
		testobj.vtMethod1(8);
		testobj.vtMethod0(43);
		testobj.vtMethod0(75);
		testobj.vtMethod0(8);
		testobj.vtMethod0(17);
		testobj.vtMethod0(36);
		testobj.vtMethod0(73);
		testobj.vtMethod0(19);
		testobj.vtMethod1(57);
		testobj.vtMethod0(45);
		testobj.vtMethod0(13);
		testobj.vtMethod0(15);
		testobj.vtMethod1(11);
		testobj.vtMethod0(7);
		testobj.vtMethod1(12);
		testobj.vtMethod1(35);
		testobj.vtMethod0(79);
		testobj.vtMethod1(7);
		testobj.vtMethod1(44);
		testobj.vtMethod1(57);
		testobj.vtMethod0(73);
		testobj.vtMethod1(40);
		testobj.vtMethod1(50);
		testobj.vtMethod0(33);
		testobj.vtMethod0(93);
		testobj.vtMethod1(52);
		testobj.vtMethod0(45);
		testobj.vtMethod1(57);
		testobj.vtMethod1(80);
		testobj.vtMethod1(87);
		testobj.vtMethod0(53);
		testobj.vtMethod1(99);
		testobj.vtMethod0(89);
		testobj.vtMethod0(37);
		testobj.vtMethod1(40);
		testobj.vtMethod1(31);
		testobj.vtMethod1(76);
		testobj.vtMethod1(14);
		testobj.vtMethod0(42);
		testobj.vtMethod0(21);
		testobj.vtMethod0(64);
		testobj.vtMethod1(20);
		testobj.vtMethod0(86);
		testobj.vtMethod1(52);
		testobj.vtMethod1(88);
		testobj.vtMethod0(36);
		testobj.vtMethod0(24);
		testobj.vtMethod1(11);
		testobj.vtMethod1(9);
		testobj.vtMethod1(89);
		testobj.vtMethod1(0);
		testobj.vtMethod0(2);
		testobj.vtMethod1(47);
		testobj.vtMethod0(11);
		testobj.vtMethod0(92);
		testobj.vtMethod1(16);
		testobj.vtMethod1(18);
		testobj.vtMethod0(68);
		testobj.vtMethod0(57);
		testobj.vtMethod1(46);
		testobj.vtMethod1(98);
		testobj.vtMethod1(5);
		testobj.vtMethod0(80);
		testobj.vtMethod0(12);
		testobj.vtMethod1(59);
		testobj.vtMethod0(39);
		testobj.vtMethod0(21);
		testobj.vtMethod0(68);
		testobj.vtMethod1(63);
		testobj.vtMethod0(34);
		testobj.vtMethod0(66);
		testobj.vtMethod0(11);
		testobj.vtMethod0(45);
		testobj.vtMethod0(27);
		testobj.vtMethod1(23);
		testobj.vtMethod0(95);
		testobj.vtMethod0(49);
		testobj.vtMethod1(85);
		testobj.vtMethod0(47);
		testobj.vtMethod0(43);
		testobj.vtMethod0(55);
		testobj.vtMethod1(76);
		testobj.vtMethod0(98);
		testobj.vtMethod1(45);
		testobj.vtMethod1(80);
		testobj.vtMethod1(80);
		testobj.vtMethod0(12);
		testobj.vtMethod1(68);
		testobj.vtMethod0(73);
		testobj.vtMethod1(24);
		testobj.vtMethod0(36);
		testobj.vtMethod0(11);
		testobj.vtMethod0(15);
		testobj.vtMethod1(47);
		testobj.vtMethod1(13);
		testobj.vtMethod0(68);
		testobj.vtMethod0(65);
		testobj.vtMethod1(83);
		testobj.vtMethod1(32);
		testobj.vtMethod0(78);
		testobj.vtMethod0(4);
		testobj.vtMethod1(46);
		testobj.vtMethod1(86);
		testobj.vtMethod0(97);
		testobj.vtMethod1(62);
		testobj.vtMethod0(42);
		testobj.vtMethod0(48);
		testobj.vtMethod1(80);
		testobj.vtMethod1(43);
		testobj.vtMethod1(58);
		testobj.vtMethod0(70);
		testobj.vtMethod0(85);
		testobj.vtMethod0(79);
		testobj.vtMethod1(56);
		testobj.vtMethod0(64);
		testobj.vtMethod1(63);
		testobj.vtMethod0(97);
		testobj.vtMethod1(78);
		testobj.vtMethod1(26);
		testobj.vtMethod1(89);
		testobj.vtMethod1(1);
		testobj.vtMethod1(48);
		testobj.vtMethod0(38);
		testobj.vtMethod0(16);
		testobj.vtMethod1(33);
		testobj.vtMethod0(97);
		testobj.vtMethod0(95);
		testobj.vtMethod1(24);
		testobj.vtMethod0(61);
		testobj.vtMethod1(29);
		testobj.vtMethod0(80);
		testobj.vtMethod0(95);
		testobj.vtMethod0(47);
		testobj.vtMethod1(86);
		testobj.vtMethod1(9);
		testobj.vtMethod0(70);
		testobj.vtMethod1(68);
		testobj.vtMethod0(13);
		testobj.vtMethod1(85);
		testobj.vtMethod1(17);
		testobj.vtMethod0(78);
		testobj.vtMethod0(90);
		testobj.vtMethod0(99);
		testobj.vtMethod1(63);
		testobj.vtMethod1(21);
		testobj.vtMethod0(40);
		testobj.vtMethod1(80);
		testobj.vtMethod0(1);
		testobj.vtMethod0(95);
		testobj.vtMethod1(18);
		testobj.vtMethod0(68);
		testobj.vtMethod1(99);
		testobj.vtMethod1(20);
		testobj.vtMethod1(49);
		testobj.vtMethod0(83);
		testobj.vtMethod0(92);
		testobj.vtMethod1(34);
		testobj.vtMethod0(65);
		testobj.vtMethod0(76);
		testobj.vtMethod1(76);
		testobj.vtMethod1(34);
		testobj.vtMethod1(67);
		testobj.vtMethod1(4);
		testobj.vtMethod1(52);
		testobj.vtMethod0(81);
		testobj.vtMethod1(32);
		testobj.vtMethod1(91);
		testobj.vtMethod1(15);
		testobj.vtMethod1(2);
		testobj.vtMethod1(82);
		testobj.vtMethod1(11);
		testobj.vtMethod0(22);
		testobj.vtMethod1(3);
		testobj.vtMethod1(15);
		testobj.vtMethod1(44);
		testobj.vtMethod1(76);
		testobj.vtMethod1(64);
		testobj.vtMethod1(14);
		testobj.vtMethod1(60);
		testobj.vtMethod1(94);
		testobj.vtMethod1(43);
		testobj.vtMethod0(85);
		testobj.vtMethod1(31);
		testobj.vtMethod0(52);
		testobj.vtMethod1(42);
		testobj.vtMethod0(90);
		testobj.vtMethod1(75);
		testobj.vtMethod1(37);
		testobj.vtMethod0(97);
		testobj.vtMethod0(23);
		testobj.vtMethod0(30);
		testobj.vtMethod1(1);
		testobj.vtMethod1(33);
		testobj.vtMethod0(28);
		testobj.vtMethod0(54);
		testobj.vtMethod0(75);
		testobj.vtMethod1(58);
		testobj.vtMethod0(57);
		testobj.vtMethod0(96);
		testobj.vtMethod1(72);
		testobj.vtMethod1(39);
		testobj.vtMethod0(37);
		testobj.vtMethod1(0);
		testobj.vtMethod0(6);
		testobj.vtMethod1(58);
		testobj.vtMethod0(54);
		testobj.vtMethod0(45);
		testobj.vtMethod1(21);
		testobj.vtMethod0(13);
		testobj.vtMethod1(80);
		testobj.vtMethod1(61);
		testobj.vtMethod1(14);
		testobj.vtMethod0(24);
		testobj.vtMethod0(78);
		testobj.vtMethod1(94);
		testobj.vtMethod0(90);
		testobj.vtMethod1(14);
		testobj.vtMethod1(32);
		testobj.vtMethod1(44);
		testobj.vtMethod1(85);
		testobj.vtMethod1(45);
		testobj.vtMethod0(20);
		testobj.vtMethod0(39);
		testobj.vtMethod0(11);
		testobj.vtMethod0(19);
		testobj.vtMethod1(16);
		testobj.vtMethod1(54);
		testobj.vtMethod1(11);
		testobj.vtMethod0(59);
		testobj.vtMethod0(26);
		testobj.vtMethod1(72);
		testobj.vtMethod0(52);
		testobj.vtMethod1(68);
		testobj.vtMethod0(88);
		testobj.vtMethod0(51);
		testobj.vtMethod0(72);
		testobj.vtMethod1(37);
		testobj.vtMethod1(4);
		testobj.vtMethod0(77);
		testobj.vtMethod0(73);
		testobj.vtMethod0(19);
		testobj.vtMethod1(10);
		testobj.vtMethod0(33);
		testobj.vtMethod1(68);
		testobj.vtMethod1(76);
		testobj.vtMethod0(57);
		testobj.vtMethod1(52);
		testobj.vtMethod1(14);
		testobj.vtMethod0(18);
		testobj.vtMethod1(0);
		testobj.vtMethod0(23);
		testobj.vtMethod0(23);
		testobj.vtMethod1(19);
		testobj.vtMethod0(41);
		testobj.vtMethod0(47);
		testobj.vtMethod1(80);
		testobj.vtMethod0(4);
		testobj.vtMethod1(62);
		testobj.vtMethod0(92);
		testobj.vtMethod1(13);
		testobj.vtMethod0(2);
		testobj.vtMethod0(41);
		testobj.vtMethod1(73);
		testobj.vtMethod0(52);
		testobj.vtMethod0(28);
		testobj.vtMethod1(75);
		testobj.vtMethod1(80);
		testobj.vtMethod0(9);
		testobj.vtMethod1(41);
		testobj.vtMethod1(0);
		testobj.vtMethod1(90);
		testobj.vtMethod0(46);
		testobj.vtMethod0(68);
		testobj.vtMethod1(47);
		testobj.vtMethod0(81);
		testobj.vtMethod0(93);
		testobj.vtMethod1(73);
		testobj.vtMethod1(61);
		testobj.vtMethod0(28);
		testobj.vtMethod1(73);
		testobj.vtMethod1(61);
		testobj.vtMethod1(60);
		testobj.vtMethod0(82);
		testobj.vtMethod1(56);
		testobj.vtMethod0(78);
		testobj.vtMethod0(45);
		testobj.vtMethod0(63);
		testobj.vtMethod1(2);
		testobj.vtMethod0(63);
		testobj.vtMethod0(0);
		testobj.vtMethod0(17);
		testobj.vtMethod1(97);
		testobj.vtMethod1(19);
		testobj.vtMethod0(21);
		testobj.vtMethod1(5);
		testobj.vtMethod0(70);
		testobj.vtMethod1(94);
		testobj.vtMethod0(93);
		testobj.vtMethod0(57);
		testobj.vtMethod1(10);
		testobj.vtMethod0(88);
		testobj.vtMethod0(84);
		testobj.vtMethod0(29);
		testobj.vtMethod1(70);
		testobj.vtMethod1(64);
		testobj.vtMethod0(69);
		testobj.vtMethod0(62);
		testobj.vtMethod1(8);
		testobj.vtMethod0(48);
		testobj.vtMethod0(3);
		testobj.vtMethod1(40);
		testobj.vtMethod0(18);
		testobj.vtMethod0(50);
		testobj.vtMethod0(76);
		testobj.vtMethod0(84);
		testobj.vtMethod0(31);
		testobj.vtMethod1(47);
		testobj.vtMethod0(51);
		testobj.vtMethod1(31);
		testobj.vtMethod1(36);
		testobj.vtMethod1(18);
		testobj.vtMethod0(37);
		testobj.vtMethod1(10);
		testobj.vtMethod0(81);
		testobj.vtMethod1(45);
		testobj.vtMethod1(1);
		testobj.vtMethod1(48);
		testobj.vtMethod0(45);
		testobj.vtMethod1(60);
		testobj.vtMethod0(26);
		testobj.vtMethod0(90);
		testobj.vtMethod0(30);
		testobj.vtMethod1(47);
		testobj.vtMethod0(14);
		testobj.vtMethod1(72);
		testobj.vtMethod1(41);
		testobj.vtMethod1(61);
		testobj.vtMethod1(19);
		testobj.vtMethod1(18);
		testobj.vtMethod1(13);
		testobj.vtMethod1(14);
		testobj.vtMethod1(34);
		testobj.vtMethod1(96);
		testobj.vtMethod0(96);
		testobj.vtMethod1(38);
		testobj.vtMethod0(15);
		testobj.vtMethod0(89);
		testobj.vtMethod1(23);
		testobj.vtMethod1(74);
		testobj.vtMethod1(13);
		testobj.vtMethod1(95);
		testobj.vtMethod1(29);
		testobj.vtMethod0(92);
		testobj.vtMethod1(54);
		testobj.vtMethod0(45);
		testobj.vtMethod1(2);
		testobj.vtMethod1(76);
		testobj.vtMethod1(66);
		testobj.vtMethod1(79);
		testobj.vtMethod1(57);
		testobj.vtMethod1(34);
		testobj.vtMethod1(32);
		testobj.vtMethod0(22);
		testobj.vtMethod0(82);
		testobj.vtMethod0(70);
		testobj.vtMethod0(41);
		testobj.vtMethod1(43);
		testobj.vtMethod1(91);
		testobj.vtMethod0(53);
		testobj.vtMethod0(74);
		testobj.vtMethod1(35);
		testobj.vtMethod1(9);
		testobj.vtMethod0(90);
		testobj.vtMethod0(86);
		testobj.vtMethod1(81);
		testobj.vtMethod0(74);
		testobj.vtMethod0(35);
		testobj.vtMethod0(16);
		testobj.vtMethod0(84);
		testobj.vtMethod0(94);
		testobj.vtMethod0(73);
		testobj.vtMethod0(61);
		testobj.vtMethod0(62);
		testobj.vtMethod0(82);
		testobj.vtMethod0(3);
		testobj.vtMethod0(8);
		testobj.vtMethod0(41);
		testobj.vtMethod1(53);
		testobj.vtMethod0(68);
		testobj.vtMethod1(4);
		testobj.vtMethod1(22);
		testobj.vtMethod1(50);
		testobj.vtMethod1(52);
		testobj.vtMethod1(56);
		testobj.vtMethod1(81);
		testobj.vtMethod1(46);
		testobj.vtMethod0(83);
		testobj.vtMethod0(61);
		testobj.vtMethod0(25);
		testobj.vtMethod1(5);
		testobj.vtMethod0(18);
		testobj.vtMethod0(8);
		testobj.vtMethod0(15);
		testobj.vtMethod0(48);
		testobj.vtMethod0(26);
		testobj.vtMethod0(35);
		testobj.vtMethod1(23);
		testobj.vtMethod0(21);
		testobj.vtMethod1(24);
		testobj.vtMethod1(22);
		testobj.vtMethod1(44);
		testobj.vtMethod0(42);
		testobj.vtMethod1(46);
		testobj.vtMethod0(21);
		testobj.vtMethod1(81);
		testobj.vtMethod0(62);
		testobj.vtMethod1(29);
		testobj.vtMethod0(96);
		testobj.vtMethod0(73);
		testobj.vtMethod1(81);
		tr[0] = new TraceRecord[24];
		tr[1] = new TraceRecord[23];
		TestThread0 thd0 = new TestThread0("0",testobj,tr[0]);
		thd0.start();
		TestThread1 thd1 = new TestThread1("1",testobj,tr[1]);
		thd1.start();
		try{
			thd0.join();
			thd1.join();
		}catch(Exception e){
		}
		try{
			FileWriter fw = new FileWriter("tracelog/1100.temp.testlog");
			BufferedWriter out = new BufferedWriter(fw);
			out.write("# <MethodIndex> <ArgumentValue> <ReturnValue>\n");
			out.write("2 1000 LockFreeList add remove\n");
			for(int i = 0; i < tdNum;i++){
				out.write("Thread "+i+"\n");
				for(int j = 0;j < tr[i].length;j++){
					out.write(tr[i][j].toString()+"\n");
				}
			}
			out.close();
		}catch(Exception e){
			System.out.println("ss"+e);
		}
	}
}
class TestThread0 extends Thread{
	private VTLockFreeListTest data;
	private TraceRecord[] trace;
	TestThread0(String name,VTLockFreeListTest q,TraceRecord[] tr){
		super(name);
		this.data = q;
		this.trace = tr;
	}

	public void run(){
		int add_1;
		boolean add_ret;
		int remove_1;
		boolean remove_ret;
		LinkedList<ArgType> args;
		args = new LinkedList<ArgType>();
		remove_1 = 50;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[0] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		remove_1 = 79;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[1] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		add_1 = 98;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[2] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		add_1 = 66;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[3] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		remove_1 = 27;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[4] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		add_1 = 36;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[5] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		remove_1 = 3;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[6] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		remove_1 = 81;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[7] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		remove_1 = 70;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[8] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		add_1 = 69;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[9] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		add_1 = 36;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[10] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		remove_1 = 23;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[11] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		add_1 = 54;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[12] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		remove_1 = 30;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[13] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		add_1 = 80;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[14] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		add_1 = 46;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[15] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		remove_1 = 4;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[16] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		add_1 = 19;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[17] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		add_1 = 48;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[18] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		remove_1 = 67;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[19] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		add_1 = 58;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[20] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		add_1 = 92;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[21] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		remove_1 = 17;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[22] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		add_1 = 0;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[23] = new TraceRecord(args,add_ret,0,false);
	}
}

class TestThread1 extends Thread{
	private VTLockFreeListTest data;
	private TraceRecord[] trace;
	TestThread1(String name,VTLockFreeListTest q,TraceRecord[] tr){
		super(name);
		this.data = q;
		this.trace = tr;
	}

	public void run(){
		int add_1;
		boolean add_ret;
		int remove_1;
		boolean remove_ret;
		LinkedList<ArgType> args;
		args = new LinkedList<ArgType>();
		args = new LinkedList<ArgType>();
		add_1 = 56;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[0] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		add_1 = 40;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[1] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		add_1 = 75;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[2] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		add_1 = 59;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[3] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		add_1 = 9;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[4] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		remove_1 = 34;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[5] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		add_1 = 6;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[6] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		remove_1 = 73;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[7] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		add_1 = 48;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[8] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		remove_1 = 90;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[9] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		remove_1 = 45;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[10] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		remove_1 = 56;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[11] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		add_1 = 32;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[12] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		add_1 = 83;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[13] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		remove_1 = 40;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[14] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		remove_1 = 31;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[15] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		remove_1 = 18;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[16] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		remove_1 = 0;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[17] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		add_1 = 83;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[18] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		remove_1 = 47;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[19] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		remove_1 = 61;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[20] = new TraceRecord(args,remove_ret,1,false);
		args = new LinkedList<ArgType>();
		add_1 = 22;
		args.add(new ArgInt(add_1));
		add_ret = data.vtMethod0(add_1);
		trace[21] = new TraceRecord(args,add_ret,0,false);
		args = new LinkedList<ArgType>();
		remove_1 = 17;
		args.add(new ArgInt(remove_1));
		remove_ret = data.vtMethod1(remove_1);
		trace[22] = new TraceRecord(args,remove_ret,1,false);
	}
}

